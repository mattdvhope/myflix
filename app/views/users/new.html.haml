<script type="text/javascript" src="https://js.stripe.com/v2/"></script>
<script type="text/javascript">
Stripe.setPublishableKey("#{ENV['STRIPE_PUBLISHABLE_KEY']}");
</script>

%section.register.container
  .row
    .col-sm-10.col-sm-offset-1
      %fieldset
        = bootstrap_form_for @user, html: { id: "payment-form"} do |f|
          %header
            %h1 Register
          = f.email_field :email, label: "Email Address"
          = f.password_field :password
          = f.text_field :full_name, label: "Full Name"
          = hidden_field_tag :invitation_token, @invitation_token # We put this here b/c we need to have a way to identify the invitation (and the inviter) for this potential new user who wants to Register...he needs to know who has invited him. We DON'T use f.hidden_field_tag here b/c we don't want the invitation token to be hashed under this new user.
          %fieldset.credit_card
            %span.payment-errors
            .form-group
              / For these lines (immediately below), we need to connect the "credit-card-number" label with '#credit-card-number' ; Otherwise, we'll get the 'Unable to find field Credit Card Number' rspec failure. This enables Capybara to associate a field's label with the actual input field.
              %label.control-label.col-sm-2(for="credit-card-number") Credit Card Number
              .col-sm-4
                %input.form-control#credit-card-number(type="text" data-stripe="number")
            %br/
            %br/
            .form-group
              / For these lines (immediately below), we need to connect the "security-code" label with '#security-code' ; Otherwise, we'll get the 'Unable to find field Security Code' rspec failure. This enables Capybara to associate a field's label with the actual input field.
              %label.control-label.col-sm-2(for="security-code") Security Code
              .col-sm-4
                %input.form-control#security-code(type="text" data-stripe="cvc")
            %br/
            %br/
            .form-group
              %label.control-label.col-sm-2 Expiration
              .col-sm-4
                = select_month(Date.today, {add_month_numbers: true}, class: 'form-control', data: {stripe: "exp-month"}, name: nil)
              .col-sm-2
                = select_year(Date.today.year, {start_year: Date.today.year, end_year: Date.today.year + 4}, class: 'form-control', data: {stripe: "exp-year"}, name: nil)
            %br/
            %br/
          %fieldset.credit_card
            .controls
              %input(type="submit" value="Sign Up" class="btn btn-default")
              / When user clicks on "Sign up", the js grabs the card info from the input & select fields and sends it to the Stripe server. If any of these fields are not valid, it will not hit the controller at all, therefore if it hits the controller we can be sure the the credit card info is valid, but it's still possible that if we attempt the actual charge, the card can still be declined.  So, in 'users_controller_spec.rb', we're testing "valid personal info and declined card".